library(modelsummary)
M1 <- lm(Fertility ~ Education + Agriculture, data = swiss)
M2 <- lm(Fertility ~ Education + Catholic, data = swiss)
M3 <- lm(Fertility ~ Education + Infant.Mortality + Agriculture, data = swiss)
models <- list("M1" = M1, "M2" =  M2, "M3" = M3)
library(gt)
library(gtsummary)
# additionally we want to change the font, font size and spacing
table7 <- modelsummary(models,
output = 'gt',
notes = "Notes: put some notes here...") %>%
tab_spanner(label = 'Dependent variable: Fertility', columns = 2:4) %>%
tab_options(
table.font.size = 10,
data_row.padding = px(1),
table.border.top.color = "white",
heading.border.bottom.color = "black",
row_group.border.top.color = "black",
row_group.border.bottom.color = "white",
table.border.bottom.color = "white",
column_labels.border.top.color = "black",
column_labels.border.bottom.color = "black",
table_body.border.bottom.color = "black",
table_body.hlines.color = "white"
)
table7 %>% as_kable_extra()
modelsummary(models,
output = 'gtsummary',
notes = "Notes: put some notes here...") %>%
tab_spanner(label = 'Dependent variable: Fertility', columns = 2:4) %>%
tab_options(
table.font.size = 10,
data_row.padding = px(1),
table.border.top.color = "white",
heading.border.bottom.color = "black",
row_group.border.top.color = "black",
row_group.border.bottom.color = "white",
table.border.bottom.color = "white",
column_labels.border.top.color = "black",
column_labels.border.bottom.color = "black",
table_body.border.bottom.color = "black",
table_body.hlines.color = "white"
)
?gtsummary
table7 <- modelsummary(models,
output = 'gt',
notes = "Notes: put some notes here...") %>%
tab_spanner(label = 'Dependent variable: Fertility', columns = 2:4) %>%
tab_options(
table.font.size = 10,
data_row.padding = px(1),
table.border.top.color = "white",
heading.border.bottom.color = "black",
row_group.border.top.color = "black",
row_group.border.bottom.color = "white",
table.border.bottom.color = "white",
column_labels.border.top.color = "black",
column_labels.border.bottom.color = "black",
table_body.border.bottom.color = "black",
table_body.hlines.color = "white"
)
table7%>% as_kable()
modelsummary(models,
output = 'latex',
notes = "Notes: put some notes here...") %>%
tab_spanner(label = 'Dependent variable: Fertility', columns = 2:4) %>%
tab_options(
table.font.size = 10,
data_row.padding = px(1),
table.border.top.color = "white",
heading.border.bottom.color = "black",
row_group.border.top.color = "black",
row_group.border.bottom.color = "white",
table.border.bottom.color = "white",
column_labels.border.top.color = "black",
column_labels.border.bottom.color = "black",
table_body.border.bottom.color = "black",
table_body.hlines.color = "white"
)
knitr::opts_chunk$set(cache = FALSE)
# Use cache = TRUE if you want to speed up compilation
knitr::opts_knit$set(output.format = "html")  # Set to "html" for HTML output
# A function to allow for showing some of the inline code
rinline <- function(code){
html <- '<code  class="r">``` `r CODE` ```</code>'
sub("CODE", code, html)
}
x <- 1:10
x
data <- read.csv("data.csv")
head(data)
dput(data[1:5,]) # here we only take a subset
data <- structure(list(Fertility = c(80.2, 83.1, 92.5, 85.8, 76.9), Agriculture = c(17,
45.1, 39.7, 36.5, 43.5), Examination = c(15L, 6L, 5L, 12L, 17L
), Education = c(12L, 9L, 5L, 7L, 15L), Catholic = c(9.96, 84.84,
93.4, 33.77, 5.16), Infant.Mortality = c(22.2, 22.2, 20.2, 20.3,
20.6)), class = "data.frame", row.names = c(NA, -5L))
#| label: tbl-1
#| tbl-cap: "Summary: Numeric variables"
library(knitr)
library(kableExtra)
knitr::kable(swiss[1:5,], row.names = TRUE,
caption = 'Table with kable() and kablestyling()',
booktabs = T, format="simple") %>%
kableExtra::kable_styling(full_width = T,
latex_options = c("striped",
"scale_down",
"HOLD_position"),
font_size = 11)
library(modelsummary)
M1 <- lm(Fertility ~ Education + Agriculture, data = swiss)
M2 <- lm(Fertility ~ Education + Catholic, data = swiss)
M3 <- lm(Fertility ~ Education + Infant.Mortality + Agriculture, data = swiss)
models <- list("M1" = M1, "M2" =  M2, "M3" = M3)
# Hier Weiter
library(gt)
library(gtsummary)
# additionally we want to change the font, font
table7 <- modelsummary(models,
output = 'latex',
notes = "Notes: put some notes here...") %>%
tab_spanner(label = 'Dependent variable: Fertility', columns = 2:4) %>%
tab_options(
table.font.size = 10,
data_row.padding = px(1),
table.border.top.color = "white",
heading.border.bottom.color = "black",
row_group.border.top.color = "black",
row_group.border.bottom.color = "white",
table.border.bottom.color = "white",
column_labels.border.top.color = "black",
column_labels.border.bottom.color = "black",
table_body.border.bottom.color = "black",
table_body.hlines.color = "white"
)
modelsummary(models,
output = 'gt',
notes = "Notes: put some notes here...") %>%
tab_spanner(label = 'Dependent variable: Fertility', columns = 2:4) %>%
tab_options(
table.font.size = 10,
data_row.padding = px(1),
table.border.top.color = "white",
heading.border.bottom.color = "black",
row_group.border.top.color = "black",
row_group.border.bottom.color = "white",
table.border.bottom.color = "white",
column_labels.border.top.color = "black",
column_labels.border.bottom.color = "black",
table_body.border.bottom.color = "black",
table_body.hlines.color = "white"
)
modelsummary(models,
output = 'gt',
notes = "Notes: put some notes here...")
library(modelsummary)
M1 <- lm(Fertility ~ Education + Agriculture, data = swiss)
M2 <- lm(Fertility ~ Education + Catholic, data = swiss)
M3 <- lm(Fertility ~ Education + Infant.Mortality + Agriculture, data = swiss)
models <- list("M1" = M1, "M2" =  M2, "M3" = M3)
# Hier Weiter
library(gt)
library(gtsummary)
# additionally we want to change the font, font size and spacing
table7 <- modelsummary(models,
output = 'gt',
notes = "Notes: put some notes here...") %>%
tab_spanner(label = 'Dependent variable: Fertility', columns = 2:4) %>%
tab_options(
table.font.size = 10,
data_row.padding = px(1),
table.border.top.color = "white",
heading.border.bottom.color = "black",
row_group.border.top.color = "black",
row_group.border.bottom.color = "white",
table.border.bottom.color = "white",
column_labels.border.top.color = "black",
column_labels.border.bottom.color = "black",
table_body.border.bottom.color = "black",
table_body.hlines.color = "white"
)
table7 %>% as_kable_extra()
table7
table7 %>% gt::as_latex()
table7 %>% as_kable_extra(format = "latex"
)
table7 %>% gt::as_latex()
table7 %>% gt::as_latex()
table7 %>% as_kable(format = "latex"
)
table7 <- modelsummary(models,
notes = "Notes: put some notes here...") %>%
tab_spanner(label = 'Dependent variable: Fertility', columns = 2:4) %>%
tab_options(
table.font.size = 10,
data_row.padding = px(1),
table.border.top.color = "white",
heading.border.bottom.color = "black",
row_group.border.top.color = "black",
row_group.border.bottom.color = "white",
table.border.bottom.color = "white",
column_labels.border.top.color = "black",
column_labels.border.bottom.color = "black",
table_body.border.bottom.color = "black",
table_body.hlines.color = "white"
)
modelsummary(models,
notes = "Notes: put some notes here...") %>%
tab_spanner(label = 'Dependent variable: Fertility', columns = 2:4)
modelsummary(models,
notes = "Notes: put some notes here...")
table7 <- modelsummary(models,
output = 'gt',
notes = "Notes: put some notes here...") %>%
tab_spanner(label = 'Dependent variable: Fertility', columns = 2:4) %>%
tab_options(
table.font.size = 10,
data_row.padding = px(1),
table.border.top.color = "white",
heading.border.bottom.color = "black",
row_group.border.top.color = "black",
row_group.border.bottom.color = "white",
table.border.bottom.color = "white",
column_labels.border.top.color = "black",
column_labels.border.bottom.color = "black",
table_body.border.bottom.color = "black",
table_body.hlines.color = "white"
)
table7
modelsummary(models,
output = 'gt',
notes = "Notes: put some notes here...")
knitr::opts_chunk$set(cache = FALSE)
# Use cache = TRUE if you want to speed up compilation
knitr::opts_knit$set(output.format = "html")  # Set to "html" for HTML output
# A function to allow for showing some of the inline code
rinline <- function(code){
html <- '<code  class="r">``` `r CODE` ```</code>'
sub("CODE", code, html)
}
x <- 1:10
x
data <- read.csv("data.csv")
head(data)
dput(data[1:5,]) # here we only take a subset
data <- structure(list(Fertility = c(80.2, 83.1, 92.5, 85.8, 76.9), Agriculture = c(17,
45.1, 39.7, 36.5, 43.5), Examination = c(15L, 6L, 5L, 12L, 17L
), Education = c(12L, 9L, 5L, 7L, 15L), Catholic = c(9.96, 84.84,
93.4, 33.77, 5.16), Infant.Mortality = c(22.2, 22.2, 20.2, 20.3,
20.6)), class = "data.frame", row.names = c(NA, -5L))
#| label: tbl-1
#| tbl-cap: "Summary: Numeric variables"
library(knitr)
library(kableExtra)
knitr::kable(swiss[1:5,], row.names = TRUE,
caption = 'Table with kable() and kablestyling()',
booktabs = T, format="simple") %>%
kableExtra::kable_styling(full_width = T,
latex_options = c("striped",
"scale_down",
"HOLD_position"),
font_size = 11)
knitr::opts_chunk$set(cache = FALSE)
# Use cache = TRUE if you want to speed up compilation
knitr::opts_knit$set(output.format = "html")  # Set to "html" for HTML output
# A function to allow for showing some of the inline code
rinline <- function(code){
html <- '<code  class="r">``` `r CODE` ```</code>'
sub("CODE", code, html)
}
x <- 1:10
x
data <- read.csv("data.csv")
head(data)
dput(data[1:5,]) # here we only take a subset
data <- structure(list(Fertility = c(80.2, 83.1, 92.5, 85.8, 76.9), Agriculture = c(17,
45.1, 39.7, 36.5, 43.5), Examination = c(15L, 6L, 5L, 12L, 17L
), Education = c(12L, 9L, 5L, 7L, 15L), Catholic = c(9.96, 84.84,
93.4, 33.77, 5.16), Infant.Mortality = c(22.2, 22.2, 20.2, 20.3,
20.6)), class = "data.frame", row.names = c(NA, -5L))
#| label: tbl-1
#| tbl-cap: "Summary: Numeric variables"
library(knitr)
library(kableExtra)
knitr::kable(swiss[1:5,], row.names = TRUE,
caption = 'Table with kable() and kablestyling()',
booktabs = T, format="simple") %>%
kableExtra::kable_styling(full_width = T,
latex_options = c("striped",
"scale_down",
"HOLD_position"),
font_size = 11)
library(modelsummary)
M1 <- lm(Fertility ~ Education + Agriculture, data = swiss)
M2 <- lm(Fertility ~ Education + Catholic, data = swiss)
M3 <- lm(Fertility ~ Education + Infant.Mortality + Agriculture, data = swiss)
models <- list("M1" = M1, "M2" =  M2, "M3" = M3)
modelsummary(models,
output = 'gt',
notes = "Notes: put some notes here...")
modelsummary(models,
output = 'latex',
notes = "Notes: put some notes here...") %>%
tab_spanner(label = 'Dependent variable: Fertility', columns = 2:4) %>%
tab_options(
table.font.size = 10,
data_row.padding = px(1),
table.border.top.color = "white",
heading.border.bottom.color = "black",
row_group.border.top.color = "black",
row_group.border.bottom.color = "white",
table.border.bottom.color = "white",
column_labels.border.top.color = "black",
column_labels.border.bottom.color = "black",
table_body.border.bottom.color = "black",
table_body.hlines.color = "white"
)
table7 %>% gt::as_latex()
knitr::opts_chunk$set(cache = FALSE)
# Use cache = TRUE if you want to speed up compilation
knitr::opts_knit$set(output.format = "html")  # Set to "html" for HTML output
# A function to allow for showing some of the inline code
rinline <- function(code){
html <- '<code  class="r">``` `r CODE` ```</code>'
sub("CODE", code, html)
}
x <- 1:10
x
data <- read.csv("data.csv")
head(data)
dput(data[1:5,]) # here we only take a subset
data <- structure(list(Fertility = c(80.2, 83.1, 92.5, 85.8, 76.9), Agriculture = c(17,
45.1, 39.7, 36.5, 43.5), Examination = c(15L, 6L, 5L, 12L, 17L
), Education = c(12L, 9L, 5L, 7L, 15L), Catholic = c(9.96, 84.84,
93.4, 33.77, 5.16), Infant.Mortality = c(22.2, 22.2, 20.2, 20.3,
20.6)), class = "data.frame", row.names = c(NA, -5L))
#| label: tbl-1
#| tbl-cap: "Summary: Numeric variables"
library(knitr)
library(kableExtra)
knitr::kable(swiss[1:5,], row.names = TRUE,
caption = 'Table with kable() and kablestyling()',
booktabs = T, format="simple") %>%
kableExtra::kable_styling(full_width = T,
latex_options = c("striped",
"scale_down",
"HOLD_position"),
font_size = 11)
#| label: tbl-4
#| tbl-cap: "Summary: Numeric variables"
if(knitr::is_latex_output()){outputformat <- "flextable"}
if(knitr::is_html_output()){outputformat <- "html"}
library(modelsummary)
datasummary_skim(swiss,
type="numeric",
histogram=T,
output= outputformat,
title = "Summary: Numeric variables")
library(modelsummary)
M1 <- lm(Fertility ~ Education + Agriculture, data = swiss)
M2 <- lm(Fertility ~ Education + Catholic, data = swiss)
M3 <- lm(Fertility ~ Education + Infant.Mortality + Agriculture, data = swiss)
models <- list("M1" = M1, "M2" =  M2, "M3" = M3)
# Hier Weiter
library(gt)
library(gtsummary)
# additionally we want to change the font, font size and spacing
table7 <- modelsummary(models,
output = 'gt',
notes = "Notes: put some notes here...") %>%
tab_spanner(label = 'Dependent variable: Fertility', columns = 2:4) %>%
tab_options(
table.font.size = 10,
data_row.padding = px(1),
table.border.top.color = "white",
heading.border.bottom.color = "black",
row_group.border.top.color = "black",
row_group.border.bottom.color = "white",
table.border.bottom.color = "white",
column_labels.border.top.color = "black",
column_labels.border.bottom.color = "black",
table_body.border.bottom.color = "black",
table_body.hlines.color = "white"
)
table7 %>% gt::as_latex()
table7 %>% gt::as_latex() %>% gsub("(Intercept)", "Intercept")
table7
gtsummary::knit_latex
?as_latex
table7 %>% gt::as_latex() %>% as.character() %>% gsub("(Intercept)", "Intercept")
table7 %>% gt::as_latex() %>% as.character()
table7 %>% gt::as_latex() %>% as.character() %>% gsub("\(Intercept\)", "Intercept")
table7 %>% gt::as_latex() %>% as.character() %>% gsub("\\(Intercept\\)", "Intercept")
table7 %>% gt::as_latex() %>% as.character() %>% str_replace("\\(Intercept\\)", "Intercept")
table7 %>% gt::as_latex() %>% as.character() %>% dplyr::str_replace("\\(Intercept\\)", "Intercept")
table7 %>% gt::as_latex() %>% as.character()
table7 %>% gt::as_latex() %>% as.character() %>% gsub("\\(Intercept\\)", "Intercept")
table7 %>% gt::as_latex() %>% as.character() %>% gsub("I", "O")
table7 %>% gt::as_latex() %>% as.character() %>% gsub("I", "O", .)
table7 %>% gt::as_latex() %>% as.character() %>% gsub("\\(Intercept\\)", "Intercept", .)
table7}else{table7 %>% gt::as_latex() %>% as.character() %>% gsub("\\(Intercept\\)", "Intercept", .)
table7 %>% gt::as_latex() %>% as.character() %>% gsub("\\(Intercept\\)", "Intercept", .)
table7 %>% gt::as_latex()
library(stargazer)
M1 <- lm(Fertility ~ Education + Agriculture, data = swiss)
M2 <- lm(Fertility ~ Education + Catholic, data = swiss)
M3 <- lm(Fertility ~ Education + Infant.Mortality + Agriculture, data = swiss)
stargazer(M1, M2, M3,
type= outputformat, # adjust to "html" or "latex"
table.placement = "H",
column.labels = c("M1", "M2", "M3"),
model.numbers = FALSE,
header=FALSE)
outputformat <- "latex"
library(stargazer)
M1 <- lm(Fertility ~ Education + Agriculture, data = swiss)
M2 <- lm(Fertility ~ Education + Catholic, data = swiss)
M3 <- lm(Fertility ~ Education + Infant.Mortality + Agriculture, data = swiss)
stargazer(M1, M2, M3,
type= outputformat, # adjust to "html" or "latex"
table.placement = "H",
column.labels = c("M1", "M2", "M3"),
model.numbers = FALSE,
header=FALSE)
table7 %>% gt::as_latex() %>% as.character() %>% gsub("\\(Intercept\\)", "Intercept", .) %>% cat()
library(stargazer)
M1 <- lm(Fertility ~ Education + Agriculture, data = swiss)
M2 <- lm(Fertility ~ Education + Catholic, data = swiss)
M3 <- lm(Fertility ~ Education + Infant.Mortality + Agriculture, data = swiss)
stargazer(M1, M2, M3,
type= outputformat, # adjust to "html" or "latex"
table.placement = "H",
column.labels = c("M1", "M2", "M3"),
model.numbers = FALSE,
header=FALSE)
table7
library(tidyverse)
library(quanteda)
library(quanteda.textstats)
# Import and filter data
data <- read.csv("./data/data_long.csv") %>%
filter(!is.na(probing_answer)) %>%
filter(variable_probing!="children")
library(tidyverse)
library(quanteda)
library(quanteda.textstats)
# Import and filter data
data <- read.csv("./data/data_long.csv") %>%
filter(!is.na(probing_answer)) %>%
filter(variable_probing!="children")
knitr::opts_chunk$set(cache = FALSE)
# Use cache = TRUE if you want to speed up compilation
knitr::opts_knit$set(output.format = "html")  # Set to "html" for HTML output
# A function to allow for showing some of the inline code
rinline <- function(code){
html <- '<code  class="r">``` `r CODE` ```</code>'
sub("CODE", code, html)
}
#| label: tbl-4
#| tbl-cap: "Summary: Numeric variables"
library(modelsummary)
datasummary_skim(swiss,
type="numeric",
histogram=T,
output= "flextable")
