x <- 1:10
x
data <- read.csv("data.csv")
head(data)
dput(data[1:5,]) # here we only take a subset
data <- structure(list(Fertility = c(80.2, 83.1, 92.5, 85.8, 76.9), Agriculture = c(17,
45.1, 39.7, 36.5, 43.5), Examination = c(15L, 6L, 5L, 12L, 17L
), Education = c(12L, 9L, 5L, 7L, 15L), Catholic = c(9.96, 84.84,
93.4, 33.77, 5.16), Infant.Mortality = c(22.2, 22.2, 20.2, 20.3,
20.6)), class = "data.frame", row.names = c(NA, -5L))
#| label: tbl-1
#| tbl-cap: "Summary: Numeric variables"
library(knitr)
#library(kableExtra)
kable(swiss[1:5,], row.names = TRUE,
caption = 'Table with kable() and kablestyling()',
booktabs = T) %>%
kable_styling(full_width = T,
latex_options = c("striped",
"scale_down",
"HOLD_position"),
font_size = 11)
#| label: tbl-1
#| tbl-cap: "Summary: Numeric variables"
library(tidyverse)
library(knitr)
#library(kableExtra)
kable(swiss[1:5,], row.names = TRUE,
caption = 'Table with kable() and kablestyling()',
booktabs = T) %>%
kable_styling(full_width = T,
latex_options = c("striped",
"scale_down",
"HOLD_position"),
font_size = 11)
#| label: tbl-1
#| tbl-cap: "Summary: Numeric variables"
library(knitr)
library(kableExtra)
knitr::kable(swiss[1:5,], row.names = TRUE,
caption = 'Table with kable() and kablestyling()',
booktabs = T) %>%
kableExtr::kable_styling(full_width = T,
latex_options = c("striped",
"scale_down",
"HOLD_position"),
font_size = 11)
#| label: tbl-1
#| tbl-cap: "Summary: Numeric variables"
library(knitr)
library(kableExtra)
knitr::kable(swiss[1:5,], row.names = TRUE,
caption = 'Table with kable() and kablestyling()',
booktabs = T) %>%
kableExtra::kable_styling(full_width = T,
latex_options = c("striped",
"scale_down",
"HOLD_position"),
font_size = 11)
knitr::opts_chunk$set(cache = FALSE)
# Use cache = TRUE if you want to speed up compilation
# A function to allow for showing some of the inline code
rinline <- function(code){
html <- '<code  class="r">``` `r CODE` ```</code>'
sub("CODE", code, html)
}
#| label: tbl-1
#| tbl-cap: "Summary: Numeric variables"
library(knitr)
library(kableExtra)
knitr::kable(swiss[1:5,], row.names = TRUE,
caption = 'Table with kable() and kablestyling()',
booktabs = T) %>%
kableExtra::kable_styling(full_width = T,
latex_options = c("striped",
"scale_down",
"HOLD_position"),
font_size = 11)
#| label: tbl-1
#| tbl-cap: "Summary: Numeric variables"
library(knitr)
library(kableExtra)
knitr::kable(swiss[1:5,], row.names = TRUE,
caption = 'Table with kable() and kablestyling()',
booktabs = T, format="simple") %>%
kableExtra::kable_styling(full_width = T,
latex_options = c("striped",
"scale_down",
"HOLD_position"),
font_size = 11)
#| label: tbl-2
#| tbl-cap: "Summary table with stargazer"
#| results: "asis"
library(stargazer)
stargazer(swiss,
title = "Summary table with stargazer",
label="tab1",
table.placement = "H",
#type="html",
header=FALSE)
citation("quarto")
x <- 1:10
x
data <- read.csv("data.csv")
head(data)
dput(data[1:5,]) # here we only take a subset
data <- structure(list(Fertility = c(80.2, 83.1, 92.5, 85.8, 76.9), Agriculture = c(17,
45.1, 39.7, 36.5, 43.5), Examination = c(15L, 6L, 5L, 12L, 17L
), Education = c(12L, 9L, 5L, 7L, 15L), Catholic = c(9.96, 84.84,
93.4, 33.77, 5.16), Infant.Mortality = c(22.2, 22.2, 20.2, 20.3,
20.6)), class = "data.frame", row.names = c(NA, -5L))
#| label: tbl-1
#| tbl-cap: "Summary: Numeric variables"
library(knitr)
library(kableExtra)
knitr::kable(swiss[1:5,], row.names = TRUE,
caption = 'Table with kable() and kablestyling()',
booktabs = T, format="simple") %>%
kableExtra::kable_styling(full_width = T,
latex_options = c("striped",
"scale_down",
"HOLD_position"),
font_size = 11)
#| label: tbl-4
#| tbl-cap: "Summary: Numeric variables"
library(modelsummary)
datasummary_skim(swiss,
type="numeric",
histogram=T,
title = "Summary: Numeric variables")
datasummary_skim(swiss,
type="numeric",
histogram=T,
output="default",
title = "Summary: Numeric variables")
#| label: tbl-4
#| tbl-cap: "Summary: Numeric variables"
library(modelsummary)
datasummary_skim(swiss,
type="numeric",
histogram=T,
output="latex",
title = "Summary: Numeric variables")
knitr::opts_chunk$set(cache = FALSE)
# Use cache = TRUE if you want to speed up compilation
# A function to allow for showing some of the inline code
rinline <- function(code){
html <- '<code  class="r">``` `r CODE` ```</code>'
sub("CODE", code, html)
}
#| label: tbl-5
#| tbl-cap: "Summary: Categorical variables"
# Create categorical variables
swiss$Education_cat <- cut(swiss$Education,
breaks=c(-Inf, 6, 12, Inf),
labels=c("low","middle","high"))
swiss$Infant.Mortality_cat <- cut(swiss$Infant.Mortality,
breaks=c(-Inf, 18.15, 21.70, Inf),
labels=c("low","middle","high"))
library(flextable)
tab_cat <- datasummary_skim(swiss,
type="categorical",
output = 'flextable')
#| label: tbl-5
#| tbl-cap: "Summary: Categorical variables"
# Create categorical variables
swiss$Education_cat <- cut(swiss$Education,
breaks=c(-Inf, 6, 12, Inf),
labels=c("low","middle","high"))
swiss$Infant.Mortality_cat <- cut(swiss$Infant.Mortality,
breaks=c(-Inf, 18.15, 21.70, Inf),
labels=c("low","middle","high"))
library(flextable)
library(modelsummary)
tab_cat <- datasummary_skim(swiss,
type="categorical",
output = 'flextable')
# additionally we want to change the font, fontsize and spacing
library("gdtools")
library(dplyr)
tab_cat <- tab_cat %>%
font(fontname="Times New Roman", part="header") %>%
font(fontname="Times New Roman", j=1:4) %>%
fontsize(size=12, part="header") %>%
fontsize(size=10, j=1:4) %>%
line_spacing(space = 0.3, part = "all")
tab_cat
#| label: fig1
#| fig-cap: "Scatterplot of Speed and Distance"
plot(swiss$Catholic, swiss$Fertility)
#| label: fig-2
#| fig-cap: "Miles per gallon according to the weight"
library(ggplot2)
ggplot(swiss, aes(x=Catholic, y=Fertility, shape=Education_cat)) + geom_point() +
labs(x="Agriculture", y = "Fertility",
shape="Education") + theme_classic()
#| label: fig-2
#| fig-cap: "Miles per gallon according to the weight"
library(ggplot2)
plot <- ggplot(swiss, aes(x=Catholic, y=Fertility, shape=Education_cat)) + geom_point() +
labs(x="Agriculture", y = "Fertility",
shape="Education") + theme_classic()
plot
cite(modelsummary)
citEntry(modelsummary)
citation("modelsummary")
citation("gt")
citation("kable")
citation("knitr")
citation("tinytex")
citation("tinytex", bibtex=T)
citation("tinytex", bibtex=TRUE)
print(citation("tinytex", bibtex=TRUE))
knitr::opts_chunk$set(cache = FALSE)
# Use cache = TRUE if you want to speed up compilation
# A function to allow for showing some of the inline code
rinline <- function(code){
html <- '<code  class="r">``` `r CODE` ```</code>'
sub("CODE", code, html)
}
data <- read.csv("data.csv")
head(data)
stargazer(swiss,
title = "Summary table with stargazer",
label="tbl-2",
table.placement = "H",
type="html",
header=FALSE)
#| label: tbl-2
#| tbl-cap: "Summary table with stargazer"
#| results: "asis"
library(stargazer)
stargazer(swiss,
title = "Summary table with stargazer",
label="tbl-2",
table.placement = "H",
type="html",
header=FALSE)
knitr::opts_chunk$set(cache = FALSE)
# Use cache = TRUE if you want to speed up compilation
knitr::opts_knit$set(output.format = "html")  # Set to "html" for HTML output
# A function to allow for showing some of the inline code
rinline <- function(code){
html <- '<code  class="r">``` `r CODE` ```</code>'
sub("CODE", code, html)
}
data <- read.csv("data.csv")
head(data)
dput(data[1:5,]) # here we only take a subset
data <- structure(list(Fertility = c(80.2, 83.1, 92.5, 85.8, 76.9), Agriculture = c(17,
45.1, 39.7, 36.5, 43.5), Examination = c(15L, 6L, 5L, 12L, 17L
), Education = c(12L, 9L, 5L, 7L, 15L), Catholic = c(9.96, 84.84,
93.4, 33.77, 5.16), Infant.Mortality = c(22.2, 22.2, 20.2, 20.3,
20.6)), class = "data.frame", row.names = c(NA, -5L))
#| label: tbl-1
#| tbl-cap: "Summary: Numeric variables"
library(knitr)
library(kableExtra)
knitr::kable(swiss[1:5,], row.names = TRUE,
caption = 'Table with kable() and kablestyling()',
booktabs = T, format="simple") %>%
kableExtra::kable_styling(full_width = T,
latex_options = c("striped",
"scale_down",
"HOLD_position"),
font_size = 11)
stargazer(swiss,
title = "Summary table with stargazer",
label="tbl-2",
table.placement = "H",
type="html",
header=FALSE)
#| label: tbl-2
#| tbl-cap: "Summary table with stargazer"
#| results: "asis"
library(stargazer)
stargazer(swiss,
title = "Summary table with stargazer",
label="tbl-2",
table.placement = "H",
type="html",
header=FALSE)
`r if (knitr::is_html_output()) "@tbl-2-html was generated using the stargazer() R package [@hlavac2013stargazer] and shows summary statistics of our data." else ""`
knitr::opts_chunk$set(cache = FALSE)
# Use cache = TRUE if you want to speed up compilation
knitr::opts_knit$set(output.format = "html")  # Set to "html" for HTML output
# A function to allow for showing some of the inline code
rinline <- function(code){
html <- '<code  class="r">``` `r CODE` ```</code>'
sub("CODE", code, html)
}
#| label: tbl-4
#| tbl-cap: "Summary: Numeric variables"
library(modelsummary)
datasummary_skim(swiss,
type="numeric",
#histogram=T,
output="tex",
title = "Summary: Numeric variables")
#| label: tbl-4
#| tbl-cap: "Summary: Numeric variables"
library(modelsummary)
datasummary_skim(swiss,
type="numeric",
#histogram=T,
output="latex",
title = "Summary: Numeric variables")
#| label: tbl-4
#| tbl-cap: "Summary: Numeric variables"
library(modelsummary)
datasummary_skim(swiss,
type="numeric",
#histogram=T,
output="md",
title = "Summary: Numeric variables")
#| label: tbl-4
#| tbl-cap: "Summary: Numeric variables"
library(modelsummary)
datasummary_skim(swiss,
type="numeric",
histogram=T,
output="png",
title = "Summary: Numeric variables")
#| label: tbl-4
#| tbl-cap: "Summary: Numeric variables"
library(modelsummary)
datasummary_skim(swiss,
type="numeric",
histogram=T,
output="latex_tabular",
title = "Summary: Numeric variables")
#| label: tbl-4
#| tbl-cap: "Summary: Numeric variables"
library(modelsummary)
datasummary_skim(swiss,
type="numeric",
histogram=T,
output="flextable",
title = "Summary: Numeric variables")
#| label: tbl-4-pdf
#| tbl-cap: "Summary: Numeric variables"
library(modelsummary)
datasummary_skim(swiss,
type="numeric",
histogram=T,
output="flextableo",
title = "Summary: Numeric variables")
#| label: tbl-5
#| tbl-cap: "Summary: Categorical variables"
#| results: "asis"
# Create categorical variables
swiss$Education_cat <- cut(swiss$Education,
breaks=c(-Inf, 6, 12, Inf),
labels=c("low","middle","high"))
swiss$Infant.Mortality_cat <- cut(swiss$Infant.Mortality,
breaks=c(-Inf, 18.15, 21.70, Inf),
labels=c("low","middle","high"))
library(flextable)
library(modelsummary)
tab_cat <- datasummary_skim(swiss,
type="categorical",
output = 'html')  # adjust to html for HTML output
# additionally we want to change the font, fontsize and spacing
library("gdtools")
library(dplyr)
tab_cat <- tab_cat %>%
font(fontname="Times New Roman", part="header") %>%
font(fontname="Times New Roman", j=1:4) %>%
fontsize(size=12, part="header") %>%
fontsize(size=10, j=1:4) %>%
line_spacing(space = 0.3, part = "all")
#| label: tbl-5
#| tbl-cap: "Summary: Categorical variables"
# Create categorical variables
swiss$Education_cat <- cut(swiss$Education,
breaks=c(-Inf, 6, 12, Inf),
labels=c("low","middle","high"))
swiss$Infant.Mortality_cat <- cut(swiss$Infant.Mortality,
breaks=c(-Inf, 18.15, 21.70, Inf),
labels=c("low","middle","high"))
library(flextable)
tab_cat <- datasummary_skim(swiss,
type="categorical",
output = 'flextable')
# additionally we want to change the font, fontsize and spacing
# library("gdtools")
#
# library(dplyr)
# tab_cat <- tab_cat %>%
#   font(fontname="Times New Roman", part="header") %>%
#   font(fontname="Times New Roman", j=1:4) %>%
#   fontsize(size=12, part="header") %>%
#   fontsize(size=10, j=1:4) %>%
#   line_spacing(space = 0.3, part = "all")
#
# tab_cat
#| label: tbl-5
#| tbl-cap: "Summary: Categorical variables"
# Create categorical variables
swiss$Education_cat <- cut(swiss$Education,
breaks=c(-Inf, 6, 12, Inf),
labels=c("low","middle","high"))
swiss$Infant.Mortality_cat <- cut(swiss$Infant.Mortality,
breaks=c(-Inf, 18.15, 21.70, Inf),
labels=c("low","middle","high"))
library(flextable)
tab_cat <- datasummary_skim(swiss,
type="categorical",
output = 'flextable')
# additionally we want to change the font, fontsize and spacing
# library("gdtools")
#
# library(dplyr)
# tab_cat <- tab_cat %>%
#   font(fontname="Times New Roman", part="header") %>%
#   font(fontname="Times New Roman", j=1:4) %>%
#   fontsize(size=12, part="header") %>%
#   fontsize(size=10, j=1:4) %>%
#   line_spacing(space = 0.3, part = "all")
#
tab_cat
#| label: tbl-5
#| tbl-cap: "Summary: Categorical variables"
# Create categorical variables
swiss$Education_cat <- cut(swiss$Education,
breaks=c(-Inf, 6, 12, Inf),
labels=c("low","middle","high"))
swiss$Infant.Mortality_cat <- cut(swiss$Infant.Mortality,
breaks=c(-Inf, 18.15, 21.70, Inf),
labels=c("low","middle","high"))
library(flextable)
tab_cat <- datasummary_skim(swiss,
type="categorical",
output = 'flextable')
# additionally we want to change the font, fontsize and spacing
# library("gdtools")
#
# library(dplyr)
# tab_cat <- tab_cat %>%
#   font(fontname="Times New Roman", part="header") %>%
#   font(fontname="Times New Roman", j=1:4) %>%
#   fontsize(size=12, part="header") %>%
#   fontsize(size=10, j=1:4) %>%
#   line_spacing(space = 0.3, part = "all")
#
tab_cat
#| label: tbl-6
#| tbl-cap: "Linear regression"
library(stargazer)
M1 <- lm(Fertility ~ Education + Agriculture, data = swiss)
M2 <- lm(Fertility ~ Education + Catholic, data = swiss)
M3 <- lm(Fertility ~ Education + Infant.Mortality + Agriculture, data = swiss)
stargazer(M1, M2, M3,
title = "Regression table with stargazer",
label="tab2",
type="html",
table.placement = "H",
column.labels = c("M1", "M2", "M3"),
model.numbers = FALSE,
header=FALSE)
stargazer(M1, M2, M3,
title = "Regression table with stargazer",
label="tab2",
type="latex",
table.placement = "H",
column.labels = c("M1", "M2", "M3"),
model.numbers = FALSE,
header=FALSE)
#| label: tbl-7
#| tbl-cap: "Linear regression"
library(modelsummary)
M1 <- lm(Fertility ~ Education + Agriculture, data = swiss)
M2 <- lm(Fertility ~ Education + Catholic, data = swiss)
M3 <- lm(Fertility ~ Education + Infant.Mortality + Agriculture, data = swiss)
models <- list("M1" = M1, "M2" =  M2, "M3" = M3)
library(gt)
# additionally we want to change the font, font size and spacing
modelsummary(models,
output = 'latex',
notes = "Notes: some notes...") %>%
tab_spanner(label = 'Dependent variable: Fertility', columns = 2:4) %>%
tab_options(
table.font.size = 10,
data_row.padding = px(1),
table.border.top.color = "white",
heading.border.bottom.color = "black",
row_group.border.top.color = "black",
row_group.border.bottom.color = "white",
table.border.bottom.color = "white",
column_labels.border.top.color = "black",
column_labels.border.bottom.color = "black",
table_body.border.bottom.color = "black",
table_body.hlines.color = "white"
)
# additionally we want to change the font, font size and spacing
modelsummary(models,
output = 'html',
notes = "Notes: some notes...") %>%
tab_spanner(label = 'Dependent variable: Fertility', columns = 2:4) %>%
tab_options(
table.font.size = 10,
data_row.padding = px(1),
table.border.top.color = "white",
heading.border.bottom.color = "black",
row_group.border.top.color = "black",
row_group.border.bottom.color = "white",
table.border.bottom.color = "white",
column_labels.border.top.color = "black",
column_labels.border.bottom.color = "black",
table_body.border.bottom.color = "black",
table_body.hlines.color = "white"
)
